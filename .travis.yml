
language:
  - cpp

matrix:
  include:
    - os: linux
      compiler: gcc
      dist: trusty
    - os: osx
      compiler: clang
      osx_image: xcode9.1

sudo: required

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - cmake
      - g++-4.9
      - qtbase5-dev
  coverity_scan:
    project:
      name: "igormironchik/cfgfile"
      description: "Build submitted via Travis CI"
    notification_email: igor.mironchik@gmail.com
    build_command_prepend:
      - |
        echo 'Starting prebuild step...'; \
        sudo ln -s -f /usr/bin/g++-4.9 /usr/bin/g++; \
        sudo ln -s -f /usr/bin/gcc-4.9 /usr/bin/gcc; \
        mkdir build; \
        cd build; \
        cmake ..; \
        echo 'Prebuild step finished...';
    build_command: make
    branch_pattern: coverity_scan

before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" && ${COVERITY_SCAN_BRANCH} != 1 ]; then \
      pip install --user cpp-coveralls; \
      export CC=gcc-4.9 CXX=g++-4.9 CMAKEOPTS='-DENABLE_COVERAGE=ON'; \
      fi
  - |
    if [ ${COVERITY_SCAN_BRANCH} == 1 ]; then \
      echo -n | openssl s_client -connect scan.coverity.com:443 | \
      sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | \
      sudo tee -a /etc/ssl/certs/ca-; \
      export CC=gcc-4.9 CXX=g++-4.9 CMAKEOPTS=; \
      fi
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew update; \
      export CMAKEOPTS=; \
      fi

install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew install qt cmake; \
      brew link --force qt; \
      fi


script:
  - |
    if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then \
      mkdir build; \
      cd build; \
      cmake ${CMAKEOPTS} ..; \
      make; \
      ctest --output-on-failure; \
      if [ ${TRAVIS_OS_NAME} == linux ]; then \
      cd ..; \
      coveralls --build-root build --gcov-options '\-lp' \
      -e build/CMakeFiles -e build/tests/auto/Generator/test.hpp \
      -e build/example -e Args -e doc -e example \
      -e generator -e UnitTest -e tests \
      -e build/tests/auto/QtGenerator/test.hpp; \
      fi; \
      fi
